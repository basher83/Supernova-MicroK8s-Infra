# Mise configuration for terraform-homelab

[settings]
auto_install = true
not_found_auto_install = true
jobs = 4
task_run_auto_install = true

[settings.status]
show_tools = true
show_env = false
truncate = true

[tools]
cosign = "2.6.0"
eza = "0.23.0"
fd = "10.2.0"
pre-commit = "4.3.0"
rg = "14.1.1"

# Pin to Terraform >=1.10 to support Ephemeral Resources
terraform = "1.13.3"
terraform-docs = "0.20.0"
tflint = "0.59.1"

# Additional useful tools for infrastructure projects
yamllint = "1.37.1"
yamlfmt = "0.17.2"
shellcheck = "0.11.0"
markdownlint-cli2 = "0.18.1"

[tasks.fmt]
description = "Format all Terraform files recursively"
dir = "terraform"
run = "terraform fmt -recursive"

[tasks.yaml-fmt]
description = "Format YAML files"
run = "yamlfmt ."

[tasks.fmt-check]
description = "Check formatting recursively (non-mutating, CI-friendly)"
dir = "terraform"
run = "terraform fmt -recursive -check -diff"

[tasks.fmt-all]
description = "Format all files (Terraform and YAML)"
depends = ["fmt", "yaml-fmt"]


[tasks.prod-validate]
description = "Validate Terraform configuration"
dir = "terraform"
run = "terraform init -backend=false -input=false >/dev/null && terraform validate"

[tasks.docs]
description = "Generate Terraform documentation for all modules and environments"
run = "./scripts/generate-docs.sh"

[tasks.docs-check]
description = "Check if Terraform documentation is up-to-date"
dir = "terraform"
run = "terraform-docs --config ../.terraform-docs.yml --output-check ."

[tasks.lint-prod]
description = "Run TFLint on Terraform configuration"
dir = "terraform"
run = "tflint --init && tflint"

[tasks.check]
description = "Format, lint, and validate Terraform configuration"
depends = ["fmt", "lint-prod", "prod-validate"]
env = { TF_IN_AUTOMATION = "true", TF_INPUT = "false" }

[tasks.hooks-install]
description = "Install pre-commit and infisical hooks"
run = "pre-commit install && infisical scan install --pre-commit-hook"

[tasks.hooks-run]
description = "Run pre-commit hooks"
run = "pre-commit run --all-files"

[tasks.infisical-scan]
description = "Scan repository for secrets and sensitive data"
run = "infisical scan"

[tasks.shellcheck]
description = "Lint shell scripts"
run = "find scripts -name '*.sh' -exec shellcheck {} +"

[tasks.yaml-lint]
description = "Lint YAML files"
run = "yamllint ."

[tasks.markdown-lint]
description = "Lint Markdown files"
run = "markdownlint-cli2 '**/*.md'"

[tasks.ansible-lint]
description = "Lint Ansible files"
run = "ansible-lint ansible/"

[tasks.lint-all]
description = "Run all linting tasks"
depends = [
    "shellcheck",
    "yaml-lint",
    "markdown-lint",
    "lint-prod",
    "ansible-lint",
]

[tasks.validate-all]
description = "Validate Terraform configuration"
depends = ["prod-validate"]

[tasks.full-check]
description = "Complete validation including formatting, linting, docs, and security"
depends = [
    "fmt-all",
    "validate-all",
    "lint-all",
    "docs-check",
    "infisical-scan",
]
env = { TF_IN_AUTOMATION = "true", TF_INPUT = "false" }

[tasks.setup]
description = "Initial project setup - install hooks and generate docs"
depends = ["hooks-install", "docs"]

# Terraform convenience tasks
[tasks.plan]
description = "Run terraform plan"
dir = "terraform"
run = "terraform plan"

[tasks.apply]
description = "Run terraform apply"
dir = "terraform"
run = "terraform apply"

[tasks.destroy]
description = "Run terraform destroy"
dir = "terraform"
run = "terraform destroy"
